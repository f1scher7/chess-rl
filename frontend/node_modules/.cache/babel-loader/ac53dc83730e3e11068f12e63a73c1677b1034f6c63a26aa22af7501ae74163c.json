{"ast":null,"code":"var _jsxFileName = \"/home/fischer/IT/projects/chess-rl/frontend/src/pages/chessBoardPage/ChessBoardPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { Chess } from 'chess.js';\nimport { Chessboard } from 'react-chessboard';\nimport '../../global.css';\nimport './ChessBoardPage.css';\nimport { generateGroupedMoves, retrieveEpisodeNumFromModelFileName } from '../../utils/utils';\nimport { isGameOver, onDrop, resetBoard } from '../../services/chessService';\nimport GameOverDialog from '../../components/dialogs/gameOverDialog';\nimport { GameOverResultText, PieceColor } from '../../enums';\nimport { fetchAgentMove } from '../../api/fetcher';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ChessBoardPage = ({\n  isView\n}) => {\n  _s();\n  var _location$state, _location$state2, _location$state3;\n  const location = useLocation();\n  const navigate = useNavigate();\n  const savedGameContent = (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.savedGameContent;\n  const userColor = (_location$state2 = location.state) === null || _location$state2 === void 0 ? void 0 : _location$state2.userColor;\n  const modelFileName = (_location$state3 = location.state) === null || _location$state3 === void 0 ? void 0 : _location$state3.modelFileName;\n  const gameRef = useRef(new Chess());\n  const moveListSliderRef = useRef(null);\n  const [fen, setFen] = useState(gameRef.current.fen());\n  const [moves, setMoves] = useState(isView && savedGameContent ? savedGameContent.moves : []);\n  const [groupedMoves, setGroupedMoves] = useState(isView && savedGameContent ? generateGroupedMoves(savedGameContent.moves) : []);\n  const [currMoveIdx, setCurrMoveIdx] = useState(-1);\n  const [isAgentTurn, setIsAgentTurn] = useState(!isView && userColor === PieceColor.Black);\n  const [gameResult, setGameResult] = useState('');\n  const [gameResultText, setGameResultText] = useState('');\n  const [showGameOverDialog, setShowGameOverDialog] = useState(false);\n  const episodesPlayedByAgent = retrieveEpisodeNumFromModelFileName(modelFileName, isView);\n  const incrMoveIdx = isArrowListener => {\n    if (currMoveIdx === -1) {\n      setCurrMoveIdx(1);\n    } else if (currMoveIdx < moves.length && (isView || isArrowListener) || currMoveIdx <= moves.length && !isView && !isArrowListener) {\n      setCurrMoveIdx(currMoveIdx + 1);\n    }\n  };\n  const handleDrop = (source, target) => {\n    const isLegalMove = onDrop(gameRef.current, setFen, setMoves, source, target);\n    if (isLegalMove) {\n      setGameResult(isGameOver(gameRef.current));\n      incrMoveIdx(false);\n      setIsAgentTurn(true);\n    }\n    return isLegalMove;\n  };\n  const handleCloseGameOverDialog = () => {\n    setShowGameOverDialog(false);\n  };\n  useEffect(() => {\n    if (!savedGameContent && isView || !modelFileName && !userColor && !isView) {\n      navigate('/');\n    }\n  }, [savedGameContent, isView, navigate]);\n  useEffect(() => {\n    const game = new Chess();\n    for (let i = 0; i < currMoveIdx; i++) {\n      game.move(moves[i]);\n    }\n    setGroupedMoves(generateGroupedMoves(moves));\n    gameRef.current = game;\n    setFen(game.fen());\n  }, [currMoveIdx]);\n  useEffect(() => {\n    (async () => {\n      if (isAgentTurn && !gameResult && !isView) {\n        try {\n          const data = await fetchAgentMove(modelFileName, fen);\n          if (data.move_str) {\n            setMoves(prev => [...prev, data.move_str]);\n            incrMoveIdx(false);\n            setIsAgentTurn(false);\n          }\n        } catch (e) {\n          console.error(e);\n          throw e;\n        }\n      }\n    })();\n  }, [isAgentTurn]);\n  useEffect(() => {\n    const handleKeyDown = e => {\n      if (e.key === 'ArrowLeft') {\n        if (currMoveIdx === -1) {\n          setCurrMoveIdx(0);\n        } else if (currMoveIdx > 0) {\n          setCurrMoveIdx(currMoveIdx - 1);\n        }\n      } else if (e.key === 'ArrowRight') {\n        incrMoveIdx(true);\n      }\n    };\n    window.addEventListener('keydown', handleKeyDown);\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [currMoveIdx]);\n  useEffect(() => {\n    if (moveListSliderRef.current) {\n      const activeLi = moveListSliderRef.current.querySelector('.active');\n      if (activeLi instanceof HTMLElement) {\n        activeLi.scrollIntoView({\n          behavior: 'auto',\n          block: 'nearest'\n        });\n      }\n    }\n  }, [currMoveIdx, groupedMoves]);\n  useEffect(() => {\n    if (gameResult && !isView) {\n      if (gameResult === 'draw') {\n        setGameResultText(GameOverResultText.Draw);\n      } else if (gameResult === userColor) {\n        setGameResultText(GameOverResultText.Win);\n      } else if (gameResult !== userColor) {\n        setGameResultText(GameOverResultText.Lose);\n      }\n      setShowGameOverDialog(true);\n    }\n  }, [gameResult]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid home-bg d-flex align-items-center justify-content-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row bg-light bg-opacity-75 rounded-3 shadow w-75\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-8 d-flex flex-column\",\n        style: {\n          height: '95vh'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-column text-center mt-4\",\n          children: isView ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Agents' game\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: [\"Result: \", savedGameContent === null || savedGameContent === void 0 ? void 0 : savedGameContent.result]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Try to beat the Agent!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex flex-column flex-grow-1 align-items-center justify-content-center w-75 h-75 mt-1p mx-auto\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"align-items-start w-100\",\n            children: isView ? /*#__PURE__*/_jsxDEV(\"h5\", {\n              children: [\"Agent: Andrzej (\", savedGameContent === null || savedGameContent === void 0 ? void 0 : savedGameContent.black_elo, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 33\n            }, this) : /*#__PURE__*/_jsxDEV(\"h5\", {\n              children: `Agent (${episodesPlayedByAgent} episodes played)`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Chessboard, {\n            position: fen,\n            isDraggablePiece: ({\n              piece\n            }) => {\n              if (isView) {\n                return false;\n              } else {\n                return piece.startsWith(userColor[0]);\n              }\n            },\n            onPieceDrop: handleDrop,\n            boardOrientation: userColor === PieceColor.Black ? PieceColor.Black : PieceColor.White,\n            customDarkSquareStyle: {\n              backgroundColor: 'rgb(46, 51, 54, 0.5)'\n            },\n            customLightSquareStyle: {\n              backgroundColor: 'rgba(255, 255, 255, 0.5)'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"align-items-start w-100 mt-2\",\n            children: isView ? /*#__PURE__*/_jsxDEV(\"h5\", {\n              children: [\"Agent: Kazimierz (\", savedGameContent === null || savedGameContent === void 0 ? void 0 : savedGameContent.white_elo, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 33\n            }, this) : /*#__PURE__*/_jsxDEV(\"h5\", {\n              children: \"You (+inf elo)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-4 d-flex align-items-center\",\n        style: {\n          height: '95vh'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"moves-div d-flex flex-column justify-content-center w-100 h-100\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"mt-20p\",\n            children: \"Moves\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 25\n          }, this), moves.length !== 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"move-list\",\n              ref: moveListSliderRef,\n              children: groupedMoves.map((pairOfMoves, pairIdx) => /*#__PURE__*/_jsxDEV(\"ul\", {\n                className: \"d-flex list-group list-group-horizontal\",\n                children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                  className: \"list-group-item\",\n                  children: [pairIdx + 1, \".\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 201,\n                  columnNumber: 45\n                }, this), pairOfMoves.map((move, moveIdx) => /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: `list-group-item ${pairIdx * 2 === currMoveIdx - 1 && moveIdx === 0 || pairIdx * 2 + 1 === currMoveIdx - 1 && moveIdx === 1 ? 'active' : ''}`,\n                  onClick: () => setCurrMoveIdx(pairIdx * 2 + moveIdx + 1),\n                  style: {\n                    cursor: 'pointer'\n                  },\n                  children: move\n                }, moveIdx, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 205,\n                  columnNumber: 49\n                }, this))]\n              }, pairIdx, true, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 41\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex w-100 mt-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: `btn btn-dark w-25 ${currMoveIdx < 1 ? 'disabled' : ''}`,\n                onClick: () => setCurrMoveIdx(currMoveIdx - 1),\n                children: \"Prev move\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: `btn btn-dark w-25 ms-2 ${currMoveIdx === moves.length ? 'disabled' : ''}`,\n                onClick: () => incrMoveIdx(false),\n                children: \"Next move\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(\"h5\", {\n            children: \"No moves\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(GameOverDialog, {\n      show: showGameOverDialog,\n      resultText: gameResultText,\n      handleReset: () => resetBoard(gameRef, setFen, setMoves, setGroupedMoves, setCurrMoveIdx, setIsAgentTurn, userColor),\n      handleClose: handleCloseGameOverDialog\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 149,\n    columnNumber: 9\n  }, this);\n};\n_s(ChessBoardPage, \"PILwQ7wBc5YDQ1zxOn92Uog/xXI=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = ChessBoardPage;\nexport default ChessBoardPage;\nvar _c;\n$RefreshReg$(_c, \"ChessBoardPage\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useLocation","useNavigate","Chess","Chessboard","generateGroupedMoves","retrieveEpisodeNumFromModelFileName","isGameOver","onDrop","resetBoard","GameOverDialog","GameOverResultText","PieceColor","fetchAgentMove","jsxDEV","_jsxDEV","Fragment","_Fragment","ChessBoardPage","isView","_s","_location$state","_location$state2","_location$state3","location","navigate","savedGameContent","state","userColor","modelFileName","gameRef","moveListSliderRef","fen","setFen","current","moves","setMoves","groupedMoves","setGroupedMoves","currMoveIdx","setCurrMoveIdx","isAgentTurn","setIsAgentTurn","Black","gameResult","setGameResult","gameResultText","setGameResultText","showGameOverDialog","setShowGameOverDialog","episodesPlayedByAgent","incrMoveIdx","isArrowListener","length","handleDrop","source","target","isLegalMove","handleCloseGameOverDialog","game","i","move","data","move_str","prev","e","console","error","handleKeyDown","key","window","addEventListener","removeEventListener","activeLi","querySelector","HTMLElement","scrollIntoView","behavior","block","Draw","Win","Lose","className","children","style","height","fileName","_jsxFileName","lineNumber","columnNumber","result","black_elo","position","isDraggablePiece","piece","startsWith","onPieceDrop","boardOrientation","White","customDarkSquareStyle","backgroundColor","customLightSquareStyle","white_elo","ref","map","pairOfMoves","pairIdx","moveIdx","onClick","cursor","show","resultText","handleReset","handleClose","_c","$RefreshReg$"],"sources":["/home/fischer/IT/projects/chess-rl/frontend/src/pages/chessBoardPage/ChessBoardPage.tsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { Chess } from 'chess.js';\nimport { Chessboard } from 'react-chessboard';\nimport { SavedGameContent } from '../../models/models';\nimport '../../global.css';\nimport './ChessBoardPage.css';\nimport { generateGroupedMoves, retrieveEpisodeNumFromModelFileName } from '../../utils/utils';\nimport { isGameOver, onDrop, resetBoard } from '../../services/chessService';\nimport GameOverDialog from '../../components/dialogs/gameOverDialog';\nimport { GameOverResultText, PieceColor } from '../../enums';\nimport { fetchAgentMove } from '../../api/fetcher';\n\n\ntype ChessBoardPageProps = {\n    isView: boolean;\n};\n\nconst ChessBoardPage: React.FC<ChessBoardPageProps> = ({ isView }: ChessBoardPageProps) => {\n    const location = useLocation();\n    const navigate = useNavigate();\n\n    const savedGameContent: SavedGameContent = location.state?.savedGameContent;\n    const userColor: string = location.state?.userColor;\n    const modelFileName: string = location.state?.modelFileName;\n\n    const gameRef = useRef<Chess>(new Chess());\n    const moveListSliderRef = useRef<HTMLDivElement | null>(null);\n    const [fen, setFen] = useState<string>(gameRef.current.fen());\n    const [moves, setMoves] = useState<string[]>(isView && savedGameContent ? savedGameContent.moves : []);\n    const [groupedMoves, setGroupedMoves] = useState<string[][]>(isView && savedGameContent ? generateGroupedMoves(savedGameContent.moves) : []);\n    const [currMoveIdx, setCurrMoveIdx] = useState<number>(-1);\n    const [isAgentTurn, setIsAgentTurn] = useState<boolean>(!isView && userColor === PieceColor.Black);\n    const [gameResult, setGameResult] = useState<string>('');\n    const [gameResultText, setGameResultText] = useState<string>('');\n    const [showGameOverDialog, setShowGameOverDialog] = useState<boolean>(false);\n\n    const episodesPlayedByAgent: string = retrieveEpisodeNumFromModelFileName(modelFileName, isView);\n\n    const incrMoveIdx = (isArrowListener: boolean): void => {\n        if (currMoveIdx === -1) {\n            setCurrMoveIdx(1);\n        } else if ((currMoveIdx < moves.length && (isView || isArrowListener)) || (currMoveIdx <= moves.length && !isView && !isArrowListener)) {\n            setCurrMoveIdx(currMoveIdx + 1);\n        }\n    };\n\n    const handleDrop = (source: string, target: string): boolean => {\n        const isLegalMove: boolean = onDrop(gameRef.current, setFen, setMoves, source, target);\n\n        if (isLegalMove) {\n            setGameResult(isGameOver(gameRef.current));\n            incrMoveIdx(false);\n            setIsAgentTurn(true);\n        }\n\n        return isLegalMove;\n    };\n    \n    const handleCloseGameOverDialog = () => {\n        setShowGameOverDialog(false);\n    };\n\n    useEffect(() => {\n        if ((!savedGameContent && isView) || (!modelFileName && !userColor && !isView)) {\n            navigate('/');\n        }\n    }, [savedGameContent, isView, navigate]);\n\n    useEffect(() => {\n        const game = new Chess();\n\n        for (let i = 0; i < currMoveIdx; i++) {\n            game.move(moves[i]);\n        }\n\n        setGroupedMoves(generateGroupedMoves(moves));\n\n        gameRef.current = game;\n        setFen(game.fen());\n    }, [currMoveIdx]);\n\n    useEffect(() => {\n        (async () => {\n            if (isAgentTurn && !gameResult && !isView) {\n                try {\n                    const data = await fetchAgentMove(modelFileName, fen);\n                    if (data.move_str) {\n                        setMoves((prev) => [...prev, data.move_str]);\n                        incrMoveIdx(false);\n                        setIsAgentTurn(false);\n                    }\n                } catch (e) {\n                    console.error(e);\n                    throw e;\n                }\n            }\n        })();\n    }, [isAgentTurn]);\n\n    useEffect(() => {\n        const handleKeyDown = (e: KeyboardEvent) => {\n            if (e.key === 'ArrowLeft') {\n                if (currMoveIdx === -1) {\n                    setCurrMoveIdx(0);\n                } else if (currMoveIdx > 0) {\n                    setCurrMoveIdx(currMoveIdx - 1);\n                }\n\n            } else if (e.key === 'ArrowRight') {\n                incrMoveIdx(true);\n            }\n        };\n\n        window.addEventListener('keydown', handleKeyDown);\n\n        return () => {\n            window.removeEventListener('keydown', handleKeyDown);\n        };\n    }, [currMoveIdx]);\n\n    useEffect(() => {\n        if(moveListSliderRef.current) {\n            const activeLi = moveListSliderRef.current.querySelector('.active');\n            if (activeLi instanceof HTMLElement) {\n                activeLi.scrollIntoView({\n                    behavior: 'auto',\n                    block: 'nearest',\n                });\n            }\n        }\n    }, [currMoveIdx, groupedMoves]);\n\n    useEffect(() => {\n        if (gameResult && !isView) {\n            if (gameResult === 'draw') {\n                setGameResultText(GameOverResultText.Draw);\n            } else if (gameResult === userColor) {\n                setGameResultText(GameOverResultText.Win);\n            } else if (gameResult !== userColor) {\n                setGameResultText(GameOverResultText.Lose);\n            }\n\n            setShowGameOverDialog(true);\n        }\n    }, [gameResult]);\n\n    return (\n        <div className=\"container-fluid home-bg d-flex align-items-center justify-content-center\">\n            <div className=\"row bg-light bg-opacity-75 rounded-3 shadow w-75\">\n                <div className=\"col-8 d-flex flex-column\" style={{ height: '95vh' }}>\n                    <div className=\"flex-column text-center mt-4\">\n                        {isView ? (\n                            <>\n                                <h2>Agents&apos; game</h2>\n                                <h4>Result: {savedGameContent?.result}</h4>\n                            </>\n                        ) : (\n                            <h2>Try to beat the Agent!</h2>\n                        )}\n                    </div>\n                    <div className=\"d-flex flex-column flex-grow-1 align-items-center justify-content-center w-75 h-75 mt-1p mx-auto\">\n                        <div className=\"align-items-start w-100\">\n                            {isView ? (\n                                <h5>Agent: Andrzej ({savedGameContent?.black_elo})</h5>\n                            ) : (\n                                <h5>{`Agent (${episodesPlayedByAgent} episodes played)`}</h5>\n                            )}\n                        </div>\n                        <Chessboard\n                            position={fen}\n                            isDraggablePiece={({ piece }): boolean => {\n                                if (isView) {\n                                    return false;\n                                } else {\n                                    return piece.startsWith(userColor[0]);\n                                }\n                            }}\n                            onPieceDrop={handleDrop}\n                            boardOrientation={userColor === PieceColor.Black ? PieceColor.Black : PieceColor.White}\n                            customDarkSquareStyle={{ backgroundColor: 'rgb(46, 51, 54, 0.5)' }}\n                            customLightSquareStyle={{ backgroundColor: 'rgba(255, 255, 255, 0.5)' }}\n                        />\n                        <div className=\"align-items-start w-100 mt-2\">\n                            {isView ? (\n                                <h5>Agent: Kazimierz ({savedGameContent?.white_elo})</h5>\n                            ) : (\n                                <h5>You (+inf elo)</h5>\n                            )}\n                        </div>\n                    </div>\n                </div>\n                <div className=\"col-4 d-flex align-items-center\" style={{ height: '95vh' }}>\n                    <div className=\"moves-div d-flex flex-column justify-content-center w-100 h-100\">\n                        <h4 className=\"mt-20p\">Moves</h4>\n                        {moves.length !== 0 ? (\n                            <>\n                                <div className=\"move-list\" ref={moveListSliderRef}>\n                                    {groupedMoves.map((pairOfMoves, pairIdx) => (\n                                        <ul key={pairIdx} className=\"d-flex list-group list-group-horizontal\">\n                                            <li className=\"list-group-item\">\n                                                {pairIdx + 1}.\n                                            </li>\n                                            {pairOfMoves.map((move, moveIdx) => (\n                                                <li key={moveIdx}\n                                                    className={`list-group-item ${\n                                                        (pairIdx * 2 === currMoveIdx - 1 && moveIdx === 0) ||\n                                                        (pairIdx * 2 + 1 === currMoveIdx - 1 && moveIdx === 1) ? 'active' : ''\n                                                    }`}\n                                                    onClick={() => setCurrMoveIdx(pairIdx * 2 + moveIdx + 1)}\n                                                    style={{ cursor: 'pointer' }}\n                                                >\n                                                    {move}\n                                                </li>\n                                            ))}\n                                        </ul>\n                                    ))}\n                                </div>\n                                <div className=\"d-flex w-100 mt-4\">\n                                    <button\n                                        className={`btn btn-dark w-25 ${currMoveIdx < 1 ? 'disabled' : ''}`}\n                                        onClick={() => setCurrMoveIdx(currMoveIdx - 1)}\n                                    >\n                                        Prev move\n                                    </button>\n                                    <button\n                                        className={`btn btn-dark w-25 ms-2 ${currMoveIdx === moves.length ? 'disabled' : ''}`}\n                                        onClick={() => incrMoveIdx(false)}\n                                    >\n                                        Next move\n                                    </button>\n                                </div>\n                            </>\n                        ) : (\n                            <h5>No moves</h5>\n                        )}\n                    </div>\n                </div>\n            </div>\n            <GameOverDialog\n                show={showGameOverDialog}\n                resultText={gameResultText}\n                handleReset={() => resetBoard(gameRef, setFen, setMoves, setGroupedMoves, setCurrMoveIdx, setIsAgentTurn, userColor)}\n                handleClose={handleCloseGameOverDialog}\n            />\n        </div>\n    );\n};\n\nexport default ChessBoardPage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAC1D,SAASC,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;AAC3D,SAASC,KAAK,QAAQ,UAAU;AAChC,SAASC,UAAU,QAAQ,kBAAkB;AAE7C,OAAO,kBAAkB;AACzB,OAAO,sBAAsB;AAC7B,SAASC,oBAAoB,EAAEC,mCAAmC,QAAQ,mBAAmB;AAC7F,SAASC,UAAU,EAAEC,MAAM,EAAEC,UAAU,QAAQ,6BAA6B;AAC5E,OAAOC,cAAc,MAAM,yCAAyC;AACpE,SAASC,kBAAkB,EAAEC,UAAU,QAAQ,aAAa;AAC5D,SAASC,cAAc,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAOnD,MAAMC,cAA6C,GAAGA,CAAC;EAAEC;AAA4B,CAAC,KAAK;EAAAC,EAAA;EAAA,IAAAC,eAAA,EAAAC,gBAAA,EAAAC,gBAAA;EACvF,MAAMC,QAAQ,GAAGvB,WAAW,CAAC,CAAC;EAC9B,MAAMwB,QAAQ,GAAGvB,WAAW,CAAC,CAAC;EAE9B,MAAMwB,gBAAkC,IAAAL,eAAA,GAAGG,QAAQ,CAACG,KAAK,cAAAN,eAAA,uBAAdA,eAAA,CAAgBK,gBAAgB;EAC3E,MAAME,SAAiB,IAAAN,gBAAA,GAAGE,QAAQ,CAACG,KAAK,cAAAL,gBAAA,uBAAdA,gBAAA,CAAgBM,SAAS;EACnD,MAAMC,aAAqB,IAAAN,gBAAA,GAAGC,QAAQ,CAACG,KAAK,cAAAJ,gBAAA,uBAAdA,gBAAA,CAAgBM,aAAa;EAE3D,MAAMC,OAAO,GAAG/B,MAAM,CAAQ,IAAII,KAAK,CAAC,CAAC,CAAC;EAC1C,MAAM4B,iBAAiB,GAAGhC,MAAM,CAAwB,IAAI,CAAC;EAC7D,MAAM,CAACiC,GAAG,EAAEC,MAAM,CAAC,GAAGnC,QAAQ,CAASgC,OAAO,CAACI,OAAO,CAACF,GAAG,CAAC,CAAC,CAAC;EAC7D,MAAM,CAACG,KAAK,EAAEC,QAAQ,CAAC,GAAGtC,QAAQ,CAAWqB,MAAM,IAAIO,gBAAgB,GAAGA,gBAAgB,CAACS,KAAK,GAAG,EAAE,CAAC;EACtG,MAAM,CAACE,YAAY,EAAEC,eAAe,CAAC,GAAGxC,QAAQ,CAAaqB,MAAM,IAAIO,gBAAgB,GAAGrB,oBAAoB,CAACqB,gBAAgB,CAACS,KAAK,CAAC,GAAG,EAAE,CAAC;EAC5I,MAAM,CAACI,WAAW,EAAEC,cAAc,CAAC,GAAG1C,QAAQ,CAAS,CAAC,CAAC,CAAC;EAC1D,MAAM,CAAC2C,WAAW,EAAEC,cAAc,CAAC,GAAG5C,QAAQ,CAAU,CAACqB,MAAM,IAAIS,SAAS,KAAKhB,UAAU,CAAC+B,KAAK,CAAC;EAClG,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAG/C,QAAQ,CAAS,EAAE,CAAC;EACxD,MAAM,CAACgD,cAAc,EAAEC,iBAAiB,CAAC,GAAGjD,QAAQ,CAAS,EAAE,CAAC;EAChE,MAAM,CAACkD,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGnD,QAAQ,CAAU,KAAK,CAAC;EAE5E,MAAMoD,qBAA6B,GAAG5C,mCAAmC,CAACuB,aAAa,EAAEV,MAAM,CAAC;EAEhG,MAAMgC,WAAW,GAAIC,eAAwB,IAAW;IACpD,IAAIb,WAAW,KAAK,CAAC,CAAC,EAAE;MACpBC,cAAc,CAAC,CAAC,CAAC;IACrB,CAAC,MAAM,IAAKD,WAAW,GAAGJ,KAAK,CAACkB,MAAM,KAAKlC,MAAM,IAAIiC,eAAe,CAAC,IAAMb,WAAW,IAAIJ,KAAK,CAACkB,MAAM,IAAI,CAAClC,MAAM,IAAI,CAACiC,eAAgB,EAAE;MACpIZ,cAAc,CAACD,WAAW,GAAG,CAAC,CAAC;IACnC;EACJ,CAAC;EAED,MAAMe,UAAU,GAAGA,CAACC,MAAc,EAAEC,MAAc,KAAc;IAC5D,MAAMC,WAAoB,GAAGjD,MAAM,CAACsB,OAAO,CAACI,OAAO,EAAED,MAAM,EAAEG,QAAQ,EAAEmB,MAAM,EAAEC,MAAM,CAAC;IAEtF,IAAIC,WAAW,EAAE;MACbZ,aAAa,CAACtC,UAAU,CAACuB,OAAO,CAACI,OAAO,CAAC,CAAC;MAC1CiB,WAAW,CAAC,KAAK,CAAC;MAClBT,cAAc,CAAC,IAAI,CAAC;IACxB;IAEA,OAAOe,WAAW;EACtB,CAAC;EAED,MAAMC,yBAAyB,GAAGA,CAAA,KAAM;IACpCT,qBAAqB,CAAC,KAAK,CAAC;EAChC,CAAC;EAEDjD,SAAS,CAAC,MAAM;IACZ,IAAK,CAAC0B,gBAAgB,IAAIP,MAAM,IAAM,CAACU,aAAa,IAAI,CAACD,SAAS,IAAI,CAACT,MAAO,EAAE;MAC5EM,QAAQ,CAAC,GAAG,CAAC;IACjB;EACJ,CAAC,EAAE,CAACC,gBAAgB,EAAEP,MAAM,EAAEM,QAAQ,CAAC,CAAC;EAExCzB,SAAS,CAAC,MAAM;IACZ,MAAM2D,IAAI,GAAG,IAAIxD,KAAK,CAAC,CAAC;IAExB,KAAK,IAAIyD,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGrB,WAAW,EAAEqB,CAAC,EAAE,EAAE;MAClCD,IAAI,CAACE,IAAI,CAAC1B,KAAK,CAACyB,CAAC,CAAC,CAAC;IACvB;IAEAtB,eAAe,CAACjC,oBAAoB,CAAC8B,KAAK,CAAC,CAAC;IAE5CL,OAAO,CAACI,OAAO,GAAGyB,IAAI;IACtB1B,MAAM,CAAC0B,IAAI,CAAC3B,GAAG,CAAC,CAAC,CAAC;EACtB,CAAC,EAAE,CAACO,WAAW,CAAC,CAAC;EAEjBvC,SAAS,CAAC,MAAM;IACZ,CAAC,YAAY;MACT,IAAIyC,WAAW,IAAI,CAACG,UAAU,IAAI,CAACzB,MAAM,EAAE;QACvC,IAAI;UACA,MAAM2C,IAAI,GAAG,MAAMjD,cAAc,CAACgB,aAAa,EAAEG,GAAG,CAAC;UACrD,IAAI8B,IAAI,CAACC,QAAQ,EAAE;YACf3B,QAAQ,CAAE4B,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAEF,IAAI,CAACC,QAAQ,CAAC,CAAC;YAC5CZ,WAAW,CAAC,KAAK,CAAC;YAClBT,cAAc,CAAC,KAAK,CAAC;UACzB;QACJ,CAAC,CAAC,OAAOuB,CAAC,EAAE;UACRC,OAAO,CAACC,KAAK,CAACF,CAAC,CAAC;UAChB,MAAMA,CAAC;QACX;MACJ;IACJ,CAAC,EAAE,CAAC;EACR,CAAC,EAAE,CAACxB,WAAW,CAAC,CAAC;EAEjBzC,SAAS,CAAC,MAAM;IACZ,MAAMoE,aAAa,GAAIH,CAAgB,IAAK;MACxC,IAAIA,CAAC,CAACI,GAAG,KAAK,WAAW,EAAE;QACvB,IAAI9B,WAAW,KAAK,CAAC,CAAC,EAAE;UACpBC,cAAc,CAAC,CAAC,CAAC;QACrB,CAAC,MAAM,IAAID,WAAW,GAAG,CAAC,EAAE;UACxBC,cAAc,CAACD,WAAW,GAAG,CAAC,CAAC;QACnC;MAEJ,CAAC,MAAM,IAAI0B,CAAC,CAACI,GAAG,KAAK,YAAY,EAAE;QAC/BlB,WAAW,CAAC,IAAI,CAAC;MACrB;IACJ,CAAC;IAEDmB,MAAM,CAACC,gBAAgB,CAAC,SAAS,EAAEH,aAAa,CAAC;IAEjD,OAAO,MAAM;MACTE,MAAM,CAACE,mBAAmB,CAAC,SAAS,EAAEJ,aAAa,CAAC;IACxD,CAAC;EACL,CAAC,EAAE,CAAC7B,WAAW,CAAC,CAAC;EAEjBvC,SAAS,CAAC,MAAM;IACZ,IAAG+B,iBAAiB,CAACG,OAAO,EAAE;MAC1B,MAAMuC,QAAQ,GAAG1C,iBAAiB,CAACG,OAAO,CAACwC,aAAa,CAAC,SAAS,CAAC;MACnE,IAAID,QAAQ,YAAYE,WAAW,EAAE;QACjCF,QAAQ,CAACG,cAAc,CAAC;UACpBC,QAAQ,EAAE,MAAM;UAChBC,KAAK,EAAE;QACX,CAAC,CAAC;MACN;IACJ;EACJ,CAAC,EAAE,CAACvC,WAAW,EAAEF,YAAY,CAAC,CAAC;EAE/BrC,SAAS,CAAC,MAAM;IACZ,IAAI4C,UAAU,IAAI,CAACzB,MAAM,EAAE;MACvB,IAAIyB,UAAU,KAAK,MAAM,EAAE;QACvBG,iBAAiB,CAACpC,kBAAkB,CAACoE,IAAI,CAAC;MAC9C,CAAC,MAAM,IAAInC,UAAU,KAAKhB,SAAS,EAAE;QACjCmB,iBAAiB,CAACpC,kBAAkB,CAACqE,GAAG,CAAC;MAC7C,CAAC,MAAM,IAAIpC,UAAU,KAAKhB,SAAS,EAAE;QACjCmB,iBAAiB,CAACpC,kBAAkB,CAACsE,IAAI,CAAC;MAC9C;MAEAhC,qBAAqB,CAAC,IAAI,CAAC;IAC/B;EACJ,CAAC,EAAE,CAACL,UAAU,CAAC,CAAC;EAEhB,oBACI7B,OAAA;IAAKmE,SAAS,EAAC,0EAA0E;IAAAC,QAAA,gBACrFpE,OAAA;MAAKmE,SAAS,EAAC,kDAAkD;MAAAC,QAAA,gBAC7DpE,OAAA;QAAKmE,SAAS,EAAC,0BAA0B;QAACE,KAAK,EAAE;UAAEC,MAAM,EAAE;QAAO,CAAE;QAAAF,QAAA,gBAChEpE,OAAA;UAAKmE,SAAS,EAAC,8BAA8B;UAAAC,QAAA,EACxChE,MAAM,gBACHJ,OAAA,CAAAE,SAAA;YAAAkE,QAAA,gBACIpE,OAAA;cAAAoE,QAAA,EAAI;YAAiB;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAC1B1E,OAAA;cAAAoE,QAAA,GAAI,UAAQ,EAACzD,gBAAgB,aAAhBA,gBAAgB,uBAAhBA,gBAAgB,CAAEgE,MAAM;YAAA;cAAAJ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC;UAAA,eAC7C,CAAC,gBAEH1E,OAAA;YAAAoE,QAAA,EAAI;UAAsB;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI;QACjC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC,eACN1E,OAAA;UAAKmE,SAAS,EAAC,kGAAkG;UAAAC,QAAA,gBAC7GpE,OAAA;YAAKmE,SAAS,EAAC,yBAAyB;YAAAC,QAAA,EACnChE,MAAM,gBACHJ,OAAA;cAAAoE,QAAA,GAAI,kBAAgB,EAACzD,gBAAgB,aAAhBA,gBAAgB,uBAAhBA,gBAAgB,CAAEiE,SAAS,EAAC,GAAC;YAAA;cAAAL,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,gBAEvD1E,OAAA;cAAAoE,QAAA,EAAK,UAAUjC,qBAAqB;YAAmB;cAAAoC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK;UAC/D;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA,CAAC,eACN1E,OAAA,CAACX,UAAU;YACPwF,QAAQ,EAAE5D,GAAI;YACd6D,gBAAgB,EAAEA,CAAC;cAAEC;YAAM,CAAC,KAAc;cACtC,IAAI3E,MAAM,EAAE;gBACR,OAAO,KAAK;cAChB,CAAC,MAAM;gBACH,OAAO2E,KAAK,CAACC,UAAU,CAACnE,SAAS,CAAC,CAAC,CAAC,CAAC;cACzC;YACJ,CAAE;YACFoE,WAAW,EAAE1C,UAAW;YACxB2C,gBAAgB,EAAErE,SAAS,KAAKhB,UAAU,CAAC+B,KAAK,GAAG/B,UAAU,CAAC+B,KAAK,GAAG/B,UAAU,CAACsF,KAAM;YACvFC,qBAAqB,EAAE;cAAEC,eAAe,EAAE;YAAuB,CAAE;YACnEC,sBAAsB,EAAE;cAAED,eAAe,EAAE;YAA2B;UAAE;YAAAd,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC3E,CAAC,eACF1E,OAAA;YAAKmE,SAAS,EAAC,8BAA8B;YAAAC,QAAA,EACxChE,MAAM,gBACHJ,OAAA;cAAAoE,QAAA,GAAI,oBAAkB,EAACzD,gBAAgB,aAAhBA,gBAAgB,uBAAhBA,gBAAgB,CAAE4E,SAAS,EAAC,GAAC;YAAA;cAAAhB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,gBAEzD1E,OAAA;cAAAoE,QAAA,EAAI;YAAc;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI;UACzB;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC,eACN1E,OAAA;QAAKmE,SAAS,EAAC,iCAAiC;QAACE,KAAK,EAAE;UAAEC,MAAM,EAAE;QAAO,CAAE;QAAAF,QAAA,eACvEpE,OAAA;UAAKmE,SAAS,EAAC,iEAAiE;UAAAC,QAAA,gBAC5EpE,OAAA;YAAImE,SAAS,EAAC,QAAQ;YAAAC,QAAA,EAAC;UAAK;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,EAChCtD,KAAK,CAACkB,MAAM,KAAK,CAAC,gBACftC,OAAA,CAAAE,SAAA;YAAAkE,QAAA,gBACIpE,OAAA;cAAKmE,SAAS,EAAC,WAAW;cAACqB,GAAG,EAAExE,iBAAkB;cAAAoD,QAAA,EAC7C9C,YAAY,CAACmE,GAAG,CAAC,CAACC,WAAW,EAAEC,OAAO,kBACnC3F,OAAA;gBAAkBmE,SAAS,EAAC,yCAAyC;gBAAAC,QAAA,gBACjEpE,OAAA;kBAAImE,SAAS,EAAC,iBAAiB;kBAAAC,QAAA,GAC1BuB,OAAO,GAAG,CAAC,EAAC,GACjB;gBAAA;kBAAApB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI,CAAC,EACJgB,WAAW,CAACD,GAAG,CAAC,CAAC3C,IAAI,EAAE8C,OAAO,kBAC3B5F,OAAA;kBACImE,SAAS,EAAE,mBACNwB,OAAO,GAAG,CAAC,KAAKnE,WAAW,GAAG,CAAC,IAAIoE,OAAO,KAAK,CAAC,IAChDD,OAAO,GAAG,CAAC,GAAG,CAAC,KAAKnE,WAAW,GAAG,CAAC,IAAIoE,OAAO,KAAK,CAAE,GAAG,QAAQ,GAAG,EAAE,EACvE;kBACHC,OAAO,EAAEA,CAAA,KAAMpE,cAAc,CAACkE,OAAO,GAAG,CAAC,GAAGC,OAAO,GAAG,CAAC,CAAE;kBACzDvB,KAAK,EAAE;oBAAEyB,MAAM,EAAE;kBAAU,CAAE;kBAAA1B,QAAA,EAE5BtB;gBAAI,GARA8C,OAAO;kBAAArB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OASZ,CACP,CAAC;cAAA,GAfGiB,OAAO;gBAAApB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAgBZ,CACP;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACD,CAAC,eACN1E,OAAA;cAAKmE,SAAS,EAAC,mBAAmB;cAAAC,QAAA,gBAC9BpE,OAAA;gBACImE,SAAS,EAAE,qBAAqB3C,WAAW,GAAG,CAAC,GAAG,UAAU,GAAG,EAAE,EAAG;gBACpEqE,OAAO,EAAEA,CAAA,KAAMpE,cAAc,CAACD,WAAW,GAAG,CAAC,CAAE;gBAAA4C,QAAA,EAClD;cAED;gBAAAG,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eACT1E,OAAA;gBACImE,SAAS,EAAE,0BAA0B3C,WAAW,KAAKJ,KAAK,CAACkB,MAAM,GAAG,UAAU,GAAG,EAAE,EAAG;gBACtFuD,OAAO,EAAEA,CAAA,KAAMzD,WAAW,CAAC,KAAK,CAAE;gBAAAgC,QAAA,EACrC;cAED;gBAAAG,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACR,CAAC;UAAA,eACR,CAAC,gBAEH1E,OAAA;YAAAoE,QAAA,EAAI;UAAQ;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CACnB;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,eACN1E,OAAA,CAACL,cAAc;MACXoG,IAAI,EAAE9D,kBAAmB;MACzB+D,UAAU,EAAEjE,cAAe;MAC3BkE,WAAW,EAAEA,CAAA,KAAMvG,UAAU,CAACqB,OAAO,EAAEG,MAAM,EAAEG,QAAQ,EAAEE,eAAe,EAAEE,cAAc,EAAEE,cAAc,EAAEd,SAAS,CAAE;MACrHqF,WAAW,EAAEvD;IAA0B;MAAA4B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd,CAAC;AAACrE,EAAA,CArOIF,cAA6C;EAAA,QAC9BjB,WAAW,EACXC,WAAW;AAAA;AAAAgH,EAAA,GAF1BhG,cAA6C;AAuOnD,eAAeA,cAAc;AAAC,IAAAgG,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}