{"ast":null,"code":"import { Chess } from 'chess.js';\nimport { Outcome, PieceColor } from '../enums';\nexport const onDrop = (game, setFen, setMoves, sourceSquare, targetSquare) => {\n  try {\n    const move = game.move({\n      from: sourceSquare,\n      to: targetSquare,\n      promotion: 'q'\n    });\n    if (move) {\n      const moveString = move.from + move.to + (move.promotion ? move.promotion : '');\n      setFen(game.fen());\n      setMoves(prev => [...prev, moveString]);\n      return true;\n    }\n    return false;\n  } catch (e) {\n    console.log(e);\n    return false;\n  }\n};\nexport const isGameOver = game => {\n  if (game.isGameOver()) {\n    if (game.isCheckmate()) {\n      return game.turn() === 'b' ? PieceColor.White : PieceColor.Black;\n    } else if (game.isStalemate() || game.isDraw() || game.isThreefoldRepetition() || game.isInsufficientMaterial()) {\n      return Outcome.Draw;\n    }\n  }\n  return '';\n};\nexport const resetBoard = (gameRef, setFen, setMoves, setGroupedMoves, setCurrMoveIdx) => {\n  gameRef.current = new Chess();\n  setFen(gameRef.current.fen());\n  setMoves([]);\n  setGroupedMoves([]);\n  setCurrMoveIdx(-1);\n};","map":{"version":3,"names":["Chess","Outcome","PieceColor","onDrop","game","setFen","setMoves","sourceSquare","targetSquare","move","from","to","promotion","moveString","fen","prev","e","console","log","isGameOver","isCheckmate","turn","White","Black","isStalemate","isDraw","isThreefoldRepetition","isInsufficientMaterial","Draw","resetBoard","gameRef","setGroupedMoves","setCurrMoveIdx","current"],"sources":["/home/fischer/IT/projects/chess-rl/frontend/chess-rl-frontend/src/services/chessService.ts"],"sourcesContent":["import React from 'react';\nimport { Chess } from 'chess.js';\nimport { Outcome, PieceColor } from '../enums';\n\n\nexport const onDrop = (\n    game: Chess,\n    setFen: (fen: string) => void,\n    setMoves: React.Dispatch<React.SetStateAction<string[]>>,\n    sourceSquare: string,\n    targetSquare: string,\n): boolean => {\n    try {\n        const move = game.move({\n            from: sourceSquare,\n            to: targetSquare,\n            promotion: 'q',\n        });\n\n        if (move) {\n            const moveString: string = move.from + move.to + (move.promotion ? move.promotion : '');\n\n            setFen(game.fen());\n            setMoves((prev: string[]) => [...prev, moveString]);\n\n            return true;\n        }\n\n        return false;\n    } catch (e) {\n        console.log(e);\n        return false;\n    }\n};\n\nexport const isGameOver = (game: Chess): string => {\n    if (game.isGameOver()) {\n        if (game.isCheckmate()) {\n            return game.turn() === 'b' ? PieceColor.White : PieceColor.Black;\n        } else if (game.isStalemate() || game.isDraw() || game.isThreefoldRepetition() || game.isInsufficientMaterial()) {\n            return Outcome.Draw;\n        }\n    }\n\n    return '';\n};\n\nexport const resetBoard = (\n    gameRef: React.RefObject<Chess>,\n    setFen: React.Dispatch<React.SetStateAction<string>>,\n    setMoves: React.Dispatch<React.SetStateAction<string[]>>,\n    setGroupedMoves: React.Dispatch<React.SetStateAction<string[][]>>,\n    setCurrMoveIdx: React.Dispatch<React.SetStateAction<number>>,\n): void => {\n    gameRef.current = new Chess();\n    setFen(gameRef.current.fen());\n    setMoves([]);\n    setGroupedMoves([]);\n    setCurrMoveIdx(-1);\n};\n"],"mappings":"AACA,SAASA,KAAK,QAAQ,UAAU;AAChC,SAASC,OAAO,EAAEC,UAAU,QAAQ,UAAU;AAG9C,OAAO,MAAMC,MAAM,GAAGA,CAClBC,IAAW,EACXC,MAA6B,EAC7BC,QAAwD,EACxDC,YAAoB,EACpBC,YAAoB,KACV;EACV,IAAI;IACA,MAAMC,IAAI,GAAGL,IAAI,CAACK,IAAI,CAAC;MACnBC,IAAI,EAAEH,YAAY;MAClBI,EAAE,EAAEH,YAAY;MAChBI,SAAS,EAAE;IACf,CAAC,CAAC;IAEF,IAAIH,IAAI,EAAE;MACN,MAAMI,UAAkB,GAAGJ,IAAI,CAACC,IAAI,GAAGD,IAAI,CAACE,EAAE,IAAIF,IAAI,CAACG,SAAS,GAAGH,IAAI,CAACG,SAAS,GAAG,EAAE,CAAC;MAEvFP,MAAM,CAACD,IAAI,CAACU,GAAG,CAAC,CAAC,CAAC;MAClBR,QAAQ,CAAES,IAAc,IAAK,CAAC,GAAGA,IAAI,EAAEF,UAAU,CAAC,CAAC;MAEnD,OAAO,IAAI;IACf;IAEA,OAAO,KAAK;EAChB,CAAC,CAAC,OAAOG,CAAC,EAAE;IACRC,OAAO,CAACC,GAAG,CAACF,CAAC,CAAC;IACd,OAAO,KAAK;EAChB;AACJ,CAAC;AAED,OAAO,MAAMG,UAAU,GAAIf,IAAW,IAAa;EAC/C,IAAIA,IAAI,CAACe,UAAU,CAAC,CAAC,EAAE;IACnB,IAAIf,IAAI,CAACgB,WAAW,CAAC,CAAC,EAAE;MACpB,OAAOhB,IAAI,CAACiB,IAAI,CAAC,CAAC,KAAK,GAAG,GAAGnB,UAAU,CAACoB,KAAK,GAAGpB,UAAU,CAACqB,KAAK;IACpE,CAAC,MAAM,IAAInB,IAAI,CAACoB,WAAW,CAAC,CAAC,IAAIpB,IAAI,CAACqB,MAAM,CAAC,CAAC,IAAIrB,IAAI,CAACsB,qBAAqB,CAAC,CAAC,IAAItB,IAAI,CAACuB,sBAAsB,CAAC,CAAC,EAAE;MAC7G,OAAO1B,OAAO,CAAC2B,IAAI;IACvB;EACJ;EAEA,OAAO,EAAE;AACb,CAAC;AAED,OAAO,MAAMC,UAAU,GAAGA,CACtBC,OAA+B,EAC/BzB,MAAoD,EACpDC,QAAwD,EACxDyB,eAAiE,EACjEC,cAA4D,KACrD;EACPF,OAAO,CAACG,OAAO,GAAG,IAAIjC,KAAK,CAAC,CAAC;EAC7BK,MAAM,CAACyB,OAAO,CAACG,OAAO,CAACnB,GAAG,CAAC,CAAC,CAAC;EAC7BR,QAAQ,CAAC,EAAE,CAAC;EACZyB,eAAe,CAAC,EAAE,CAAC;EACnBC,cAAc,CAAC,CAAC,CAAC,CAAC;AACtB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}