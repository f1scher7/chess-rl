{"ast":null,"code":"const API_URL = process.env.REACT_APP_API_URL;\nexport const fetchFileList = async pathType => {\n  try {\n    const response = await fetch(`${API_URL}/file-list?path_type=${pathType}`);\n    return await response.json();\n  } catch (e) {\n    console.log(e);\n    throw e;\n  }\n};\nexport const fetchSavedGameContent = async file => {\n  try {\n    const response = await fetch(`${API_URL}/saved-game?file=${file}`);\n    return await response.json();\n  } catch (e) {\n    console.log(e);\n    throw e;\n  }\n};","map":{"version":3,"names":["API_URL","process","env","REACT_APP_API_URL","fetchFileList","pathType","response","fetch","json","e","console","log","fetchSavedGameContent","file"],"sources":["/home/fischer/IT/projects/chess-rl/frontend/chess-rl-frontend/src/api/fetcher.tsx"],"sourcesContent":["import {ChessFile, FileList, SavedGameContent} from \"../types/types\";\n\n\nconst API_URL = process.env.REACT_APP_API_URL;\n\n\nexport const fetchFileList = async (pathType: string): Promise<FileList> => {\n  try {\n      const response = await fetch(`${API_URL}/file-list?path_type=${pathType}`);\n      return await response.json();\n  } catch (e) {\n      console.log(e);\n      throw e;\n  }\n};\n\nexport const fetchSavedGameContent = async (file: ChessFile): Promise<SavedGameContent> => {\n    try {\n        const response = await fetch(`${API_URL}/saved-game?file=${file}`);\n        return await response.json();\n    } catch (e) {\n        console.log(e);\n        throw e;\n    }\n};\n\n\n"],"mappings":"AAGA,MAAMA,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB;AAG7C,OAAO,MAAMC,aAAa,GAAG,MAAOC,QAAgB,IAAwB;EAC1E,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGP,OAAO,wBAAwBK,QAAQ,EAAE,CAAC;IAC1E,OAAO,MAAMC,QAAQ,CAACE,IAAI,CAAC,CAAC;EAChC,CAAC,CAAC,OAAOC,CAAC,EAAE;IACRC,OAAO,CAACC,GAAG,CAACF,CAAC,CAAC;IACd,MAAMA,CAAC;EACX;AACF,CAAC;AAED,OAAO,MAAMG,qBAAqB,GAAG,MAAOC,IAAe,IAAgC;EACvF,IAAI;IACA,MAAMP,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGP,OAAO,oBAAoBa,IAAI,EAAE,CAAC;IAClE,OAAO,MAAMP,QAAQ,CAACE,IAAI,CAAC,CAAC;EAChC,CAAC,CAAC,OAAOC,CAAC,EAAE;IACRC,OAAO,CAACC,GAAG,CAACF,CAAC,CAAC;IACd,MAAMA,CAAC;EACX;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}